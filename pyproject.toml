[project]
name = "mcp-manager"
version = "0.1.0"
description = "ðŸš€ MCP Manager - Comprehensive Project Standardization & Fleet Management System. Ensures consistency across Ubuntu 25.04 development environments with MCP servers, project standards, Astro.build deployment, local CI/CD, uv Python management, spec-kit integration, and Claude agent orchestration."
requires-python = ">=3.13"
dependencies = [
    "typer>=0.12.0",
    "rich>=13.0.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "platformdirs>=4.0.0",
    "psutil>=5.9.0",
    "click>=8.1.0",
    "pyyaml>=6.0.0",
    "huggingface-hub[cli]>=0.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

[project.scripts]
# Note: Using __main__ module to avoid conflict with cli/ directory
mcp-manager = "mcp_manager.__main__:main"

[project.urls]
Homepage = "https://github.com/kairin/mcp-manager"
Repository = "https://github.com/kairin/mcp-manager"
Documentation = "https://github.com/kairin/mcp-manager/blob/main/README.md"
Issues = "https://github.com/kairin/mcp-manager/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend/src/mcp_manager"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
strict_equality = true

[tool.uv]
# Enforce system Python 3.13 for all UV operations
# This ensures consistency across development environments
python = "3.13"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=mcp_manager",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--strict-markers",
    "--tb=short",
    "-v",
]
# Enforce system Python 3.13 execution via UV
# UV configuration in [tool.uv] ensures python-preference="only-system"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests requiring real system Python",
    "contract: marks tests verifying CLI behavior contracts",
]
# Filter warnings
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]